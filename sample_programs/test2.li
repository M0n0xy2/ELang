fn neg_square(x: double) -> double {
    let y = x * x;
    return -y;
}

fn test_loop(x: double) -> double {
    loop {
        return x;
        break;
        continue;
    }
}

fn test_loop2() -> int {
    let x = 0;
    loop {
        x = x + 1;
        loop {
            x = x - 1;
        }
    }
    return x;
}

fn test_while() -> int {
    let i = 100;
    while i > 0 {
        i = i - 1;
        loop {
            break;
        }
    }
    return i;
}

fn test_bool(b: bool) -> bool {
    return !(!b);
}

fn test_ptr(ptr: *int) -> int {
    *ptr = 12;
    ptr = ptr + 12;
    return *(&(*ptr));
}

fn print(_:double) {}

fn main() {
    print(neg_square(2.0 * 6.3));
}
